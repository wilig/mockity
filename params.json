{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Mocking for those pesky external web services","body":"### Executive summary:\r\n\r\nA little HTTP server that will respond to a specific request with whatever canned response you'd like.\r\n\r\n### The pitch:\r\n\r\n* Does your application make lots of calls to external services?  \r\n* Ever need to test your application or service offline?  \r\n* Want to see how your application responds to poor network conditions?\r\n* Misconfigured or misbehaving services?\r\n\r\nMockity is a local stand-in web service that can simulate many of the real world problems that your application may face.\r\n\r\n\r\n\r\n\r\n\r\n# Use\r\n\r\n    ./mockity -conf=mockity.conf -port=8989\r\n\r\nJust running mockity will use the defaults as listed.  All configuration is done via a simple JSON configuration file.\r\n\r\n## Examples\r\n\r\n### Mocking services\r\n\r\nSimple mocking:\r\n\r\n```javascript\r\n[\r\n  {\"request\": { \r\n    \"url\": \"/assets\",\r\n    \"method\": \"GET\",\r\n    \"response\": {\r\n      \"content-type\": \"application/json\",\r\n      \"status\": 200,\r\n      \"body\": \"{\\\"success\\\": true}\"\r\n      }\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nHow does it handle large response bodies you ask?  See \"Returning a file as a response body\" below.\r\n\r\nGetting more specific:\r\n\r\n\t[\r\n\t\t{\"request\": { \r\n\t  \t\t\t\"url\": \"/assets\",\r\n\t  \t\t\t\"method\": \"POST\",\r\n\t  \t\t\t\"params\": {\"mockity\": \"mocks you!\"},\r\n\t  \t \t\t\"response\": {\r\n\t\t  \t\t\t\"content-type\": \"text/html\",\r\n\t  \t\t\t\t\"status\": 200,\r\n\t  \t\t\t\t\"body\": \"<html><head><title>Mock You!</title></head><body>Geek says what?</body></html>\"\r\n\t  \t\t\t}\r\n\t  \t\t}\r\n\t  \t}\r\n\t]\r\n\r\nEven more specific:\r\n\r\n\t[\r\n\t\t{\"request\": { \r\n\t  \t\t\t\"url\": \"/assets\",\r\n\t  \t\t\t\"method\": \"POST\",\r\n\t  \t\t\t\"params\": {\"mockity\": \"mocks you!\"},\r\n\t  \t\t\t\"headers\": {\"Accept\": \"*/*\"},\r\n\t  \t \t\t\"response\": {\r\n\t\t  \t\t\t\"content-type\": \"text/html\",\r\n\t  \t\t\t\t\"status\": 200,\r\n\t  \t\t\t\t\"body\": \"<html><head><title>Mock You!</title></head><body>You'll take anything?</body></html>\"\r\n\t  \t\t\t}\r\n\t  \t\t}\r\n\t  \t}\r\n\t]\r\n\r\nNeed to set a cookie?\r\n\r\n\t...\r\n\t\t\"response\": {\r\n\t\t\t\"cookies\": {\"cookie\": \"Yum Yum\"}\r\n\t\t\t...\r\n\t\t}\r\n\t\r\nNeed to set a header?\r\n\r\n\t...\r\n\t\t\"response\": {\r\n\t\t\t\"headers\": {\"X-Mockity\": [\"Mocking you\"]}\r\n\t\t\t...\r\n\t\t}\r\n\r\nReturning a file as a response body\r\n\r\n\t...\r\n\t\t\"response\": {\r\n\t\t\t\"body\": \"!file:/path/to/file\"\r\n\t\t\t...\r\n\t\t}\r\n\r\n\r\n### Directives - Where the real fun begins\r\n\r\n\r\nSpecify a slow response.  Response is written after the specified delay in ms.\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"delay\": 1000}\r\n\t}\r\n\r\nSpecify a hung server.  It accepts connections but never responds. (Technically it will answer in about 10 years)\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"delay\": -1}\r\n\t}\r\n\r\nSpecify a response that prematurely closes the connection.  Response headers and a random portion of the response body are output and the connection is closed.\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"partial\": true}\r\n\t}\r\n\r\nSpecify a response that redirects recursively\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"loop\": true}\r\n\t}\r\n\r\n\r\nSpecify a response that never terminates.  It just keeps outputing data forever.\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"firehose\": true}\r\n\t}\r\n\r\nSpecify a response that works sometimes but not always.\r\n\r\n\t\"response\": {\r\n\t\t...\r\n\t\t\"!directive\": {\"flaky\": true}\r\n\t}\r\n\r\n## License\r\n\r\nBSD licensed, see [GitHub](http://github.com/wilig/mockity) for details. ","google":"","name":"Mockity"}